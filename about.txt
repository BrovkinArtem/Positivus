Общие приколы:
1. Cntrl + shift + c (1 раз нажать), можно видеть области при наведении на объекты. А если нажать на объект мы быстро перейдём к нему в html
2. Ctrl+Shift+P + Save Without Formatting - сохранение без форматирование, например styles.scss
3. F2 - переименовать имя файла

Структура:
1. Создаём базово input.html и другие папки (fonts, images, styles)
2. Файлы стилей начинаются с _ (кроме styles.scss)
3. Помимо styles.scss, стандартно для проекта создаём:
    _normalize.scss, _fonts.scss, _globals.scss, _media.scss, _mixins.scss, _utils.scss, _variables.scss
    |Очистка стилей |   шрифты   | глоб. стили |медиа запросы| миксины |утилитарные функции| переменные |
4. Также в папке styles создаём папку blocks, для БЭМ БЛОКОВ
5. Подключаем файлы из 2. через @import и перечисление '...', '...', '...';
6. Добавляем нормализацию в _normalize
7. В _variables, будет :root, корневая стилизация (глобальные переменные проекты)
8. Заполняем :root (Цвета, рамки, тень, шрифты, размеры и отступы контейнера, y-отступы секций, высота кнопок и инпутов, длительность переходов)
9. Подключаем шрифты (regular - 400, medium - 500, bold - 700)
10. Подключаем миксины (адаптивный размер шрифта, обнуление ссылок и кнопок, центрирование, центрирование абсолюного позиционирование, ширина и высота - квадрат)
11. Подключаем миксины для медиа (десктоп, планшет, мобилка, hover) прикол в том что мы можем адаптировать сразу в селекторе
12. Подключаем утилитарные классы (container, visually-hidden)
13. Подключаем глобальные стили (body, интерактивные элементы, заголовки)
14. После использования миксинов лучше оставлять пустую строку

Header:
1. Модальные окна нужно писать перед закрывающим тегов body (в конце в общем)
2. js для открытия меню на телефонах, id для модального окна, onclick="mobileOverlay.showModal()" у кнопки меню для открытия по клику
3. showModal(), есть только у тега dialog!
4. Для dialog мы создаём внутри форму и кнопку, важно указать у формы method="dialog", чтобы кнопка закрывал модальное окно (dialog), а также у кнопки сделать type="submit"
5. Не забываем для Блоков создавать свои стили и подключить в общем файле
6. Также вспоминаем правила написания по sass концпециям
7. ФАЙЛЫ ПОДКЛЮЧЕНИЯ ВАЖНО СТАВИТЬ В ПРАВИЛЬНОМ ПОРЯДКЕ, ЧТОБЫ SASS НЕ ВЫДАВАЛ ОШИБКИ!!!
8. Через запятую в box-shadow, можно указать ещё одну тень!
9. Есть свойство rotate - оно указывается в deg (градусы)
10. Для списка в мобилке указали высоту через min-height: 50vh;
11. Для выравнивания кнопки относительно открывающей, пишем background(255, 0, 0, 0.5), где 0.5 - прозрачность

Sections:
1. main можно дать class="content"
2. Для покраски логотипов используем filter: grayscale(1);
3. display: contents - применение на селектор правила родителя
4. 3 мы используем для изменения порядка расположения элементом через order, при этом order можно указывать отрицательные, а прочий контент считается как order: 0;
5. Для того чтобы сделать элемент который выходит за экран, увеличили его ширину, сделали минусовое смещение влево
6. &:nth-child(-n + 3) - здесь указывается что выделяем. От -n до 3, то есть выделим первые 3 элемента. n + 4, допустим, выделил бы последние 3
7. overflow-x: hidden; - скрыли полоску и убрали возможность скролить
8. Отдельные карточки (товара, рекламы, предложений...), помечаем тегом article
9. БЭМ Модификаторы нельзя использовать без основного блока
10. space-evenly - везде одинаковый space, space-around - сбоку маленькие равные space, между элементами большие равные space, space-between - space только между элементами, равные
11. align-self: center; Если нужно картинку двинуть в центр (для одиночных элементов свойство)
12. Локальные переменные назваем в camelCase нотации, а глобальные в kebab-case нотации
13. Ширина колонок подстраивалась автоматически под ширину содержимого - grid-template-columns: auto auto;
14. ol - пронумерованый список (до этого ul - обычный)
15. details - компанент аккардион, или же спойлер, выпадающий элемент вобщем
16. summary - нажимаемый header аккардиона, который будет всегда присутствовать и по нажатию на который раскроется div
17. div - часть аккардиона, которая будет выдвигаться
18. Также у details есть атрибут open, который делает элемент открытым
19. user-select: none; Для того чтобы текст нельзя было выделить в элементе
20. У ol элемента (list) в селекторе есть доп свойство conter-reset: "своё название"; + list-style: none; - убираем мини цифры от карточек
21. Для использования кастомного счётчика - у item - counter-increment: "название которе в list";
22. Далее уже для тега который внутри item, можем использовать content: "0" counter(custom-counter);; Для воспроизведения цифры счётчика, а 0 будет перед цифрой, там идёт конкатенация ко всему что напишешь
23. Если у нас происходят какие-то проблемы с вложенностью, то можно попытаться всё разрулить с помощью переменных и их переопределения
24. flex-shrink: 0; - для того чтобы не менялся размер
25. Если есть какой-то элемент который говорит о картинке как alt, то alt у img можно оставить пустым
26. атрибут target="_blank" у ссылки - открытие в новом окне, для сторонних ресурсов делаем
27. с помощью значения auto можно прижимать элементы к краю, например margin-left: auto; - прижали максимально вправо
28. blockquote - тег вставки цитаты на страницу
29. cite - тег подписи цитаты (чья)
30. Запомни! если делаем какой-то элемент через псевдоэлемнт, то у родителя - position: relative;
31. inherit - родительский
32. Не забываем про это важное свойство - translate: 0 -50%; для корректного размещения элемента (право-лево, вверх-вниз)
33. clip-path - для отрисовки рисунков
34. fieldset - тег используемый для логической группировки элементов формы
35. Если инпут внутри label, можно не связывать через for и id
36. тег <label> используется для создания подписи к элементу формы
37. resize: none; внутри textarea - чтобы убрать изменение текстэриа по ползунку
38. высоту ширину падинги марджины удобно писать так - h130 w500 mb20 p10 - будут пиксели
39. display: contents; - родитель, order: 1; - место, для ребенка